import numpy as np
import matplotlib.pyplot as plt

DIC1={288: 0.4010881696428571, 384: 0.4255022321428571, 480: 0.4673549107142857, 576: 0.4010881696428571, 640: 0.4255022321428571, 672: 0.7080078125, 768: 0.6103515625, 800: 0.06626674107142858, 864: 0.4010881696428571, 960: 0.4673549107142857, 1120: 0.7080078125, 1152: 0.6260463169642857, 1280: 0.6103515625, 1344: 0.7080078125, 1440: 0.9451729910714286, 1536: 0.5998883928571429, 1600: 0.06626674107142858, 1632: 0.05929129464285714, 1728: 0.9347098214285714, 1824: 0.1762662615094866, 1920: 0.939587184361049, 2016: 0.9802682059151786, 2112: 0.8893694196428572, 2208: 1.6392299107142856, 2240: 0.7080078125, 2304: 0.30343191964285715, 2400: 0.8963448660714286, 2496: 1.2491907392229353, 2560: 0.5998883928571429, 2592: 1.0427611214773995, 2688: 0.6952830723353794, 2720: 0.05929129464285714, 2784: 0.06277901785714286, 2880: 2.7657645089285716, 2976: 0.3696986607142857, 3040: 0.1762662615094866, 3072: 0.29471261160714285, 3168: 0.35574776785714285, 3200: 0.3135408673967634, 3264: 0.4223414829799107, 3360: 1.154327392578125, 3456: 0.9347098214285714, 3520: 0.8893694196428572, 3648: 0.1762662615094866, 3680: 1.6392299107142856, 3840: 0.5838394165039062, 3936: 0.06277901785714286, 4000: 0.35226004464285715, 4032: 0.81634521484375, 4128: 0.10463169642857142, 4160: 1.2491907392229353, 4224: 1.0881696428571428, 4320: 1.8867901393345425, 4416: 1.8624441964285716, 4480: 0.6952830723353794, 4512: 0.13253348214285715, 4608: 0.4743303571428571, 4640: 0.06277901785714286, 4800: 2.183314732142857, 4896: 0.05929129464285714, 4960: 0.3696986607142857, 4992: 1.2491907392229353, 5120: 0.29471261160714285, 5184: 1.977470942905971, 5280: 0.35574776785714285, 5376: 0.34127916608537945, 5440: 0.4223414829799107, 5472: 0.1762662615094866, 5568: 0.06277901785714286, 5600: 0.17405918666294642, 5760: 2.807262965611049, 5952: 0.3696986607142857, 6048: 0.27226039341517855, 6080: 0.1762662615094866, 6144: 0.10114397321428573, 6336: 1.2451171875, 6400: 0.2804074968610491, 6528: 0.3926958356584821, 6560: 0.06277901785714286, 6624: 1.6392299107142856, 6720: 0.9904044015066964, 6880: 0.10463169642857142, 6912: 0.5859375, 7040: 1.0881696428571428, 7200: 1.1962890625, 7296: 0.0881331307547433, 7360: 1.8624441964285716, 7488: 1.2491907392229353, 7520: 0.13253348214285715, 7680: 0.6145341055733817, 7776: 1.0427611214773995, 7872: 0.06277901785714286, 8000: 0.35226004464285715, 8064: 1.0214941842215401, 8160: 0.05929129464285714, 8256: 0.10463169642857142, 8320: 1.2491907392229353, 8352: 0.06277901785714286, 8448: 0.6434849330357143, 8640: 3.696918487548828, 8832: 1.0428292410714286, 8928: 0.3696986607142857, 8960: 0.34127916608537945, 9024: 0.13253348214285715, 9120: 0.1762662615094866, 9216: 0.21275111607142855, 9280: 0.06277901785714286, 9504: 0.35574776785714285, 9600: 2.0486831665039062, 9792: 0.36305018833705355, 9920: 0.3696986607142857, 9984: 0.6245953696114677, 10080: 0.446319580078125, 10240: 0.10114397321428573, 10368: 0.5213805607386998, 10560: 1.2451171875, 10752: 0.17063958304268972, 10880: 0.3926958356584821, 11040: 1.6392299107142856, 11136: 0.03138950892857143, 11200: 0.17405918666294642, 11520: 1.2625558035714286, 11808: 0.06277901785714286, 11904: 0.18484933035714285, 12000: 0.35226004464285715, 12096: 0.5440848214285714, 12160: 0.0881331307547433, 12384: 0.10463169642857142, 12480: 1.2491907392229353, 12672: 0.37667410714285715, 12800: 0.14020374843052455, 12960: 1.4089720589773995, 13056: 0.18152509416852677, 13120: 0.06277901785714286, 13248: 0.2232142857142857, 13440: 1.1085237775530135, 13536: 0.13253348214285715, 13760: 0.10463169642857142, 13824: 0.15345982142857142, 13920: 0.06277901785714286, 14080: 0.6434849330357143, 14400: 1.7194475446428572, 14720: 1.0428292410714286, 14880: 0.3696986607142857, 15040: 0.13253348214285715, 15360: 0.21275111607142855, 15744: 0.03138950892857143, 15840: 0.35574776785714285, 16000: 0.17613002232142858, 16128: 0.2720424107142857, 16320: 0.36305018833705355, 16512: 0.05231584821428571, 16640: 0.6245953696114677, 16800: 0.17405918666294642, 16896: 0.09940011160714285, 17280: 0.7044860294886998, 17664: 0.11160714285714285, 17920: 0.17063958304268972, 18048: 0.06626674107142858, 18432: 0.07672991071428571, 18560: 0.03138950892857143, 19200: 0.6766183035714286, 19680: 0.06277901785714286, 19840: 0.18484933035714285, 20160: 0.5440848214285714, 20640: 0.10463169642857142, 21120: 0.37667410714285715, 21600: 0.3662109375, 21760: 0.18152509416852677, 22080: 0.2232142857142857, 22400: 0.08702959333147321, 22560: 0.13253348214285715, 23040: 0.15345982142857142, 26240: 0.03138950892857143, 26880: 0.2720424107142857, 27520: 0.05231584821428571, 28160: 0.09940011160714285, 28800: 0.18310546875, 29440: 0.11160714285714285, 30080: 0.06626674107142858, 30720: 0.07672991071428571}
DIC2={256: 0.078125, 384: 0.3125, 512: 0.8984374999999999, 576: 0.3125, 640: 0.3125, 768: 3.2031249999999996, 960: 0.625, 1024: 3.359375, 1152: 2.96875, 1280: 2.96875, 1536: 9.4140625, 1600: 0.3125, 1728: 0.3125, 1920: 5.3125, 2048: 5.15625, 2304: 6.484375000000001, 2560: 7.5, 2880: 0.625, 3072: 10.15625, 3200: 2.34375, 3456: 0.78125, 3840: 9.0625, 4096: 2.8125, 4608: 4.8828125, 4800: 0.3125, 5120: 5.625, 5760: 1.25, 6144: 3.28125, 6400: 2.8125, 6912: 0.546875, 7680: 3.75, 9216: 1.171875, 9600: 0.46875, 11520: 0.46875, 13824: 0.1171875}
DIC1 = dict(sorted(DIC2.items(), key=lambda item: item[0], reverse=True))

y_values = []
percentages = []  # 对应的百分比权重
for i in DIC1:
    y_values.append(40-np.log2(i))#75-2 40-1
    percentages.append(DIC1[i])

x_positions = np.cumsum([0] + percentages)  # [0, 5, 20, 45, 75, 90, 100]
plt.figure(figsize=(8, 5))
for i in range(len(y_values)):
    plt.hlines(y=y_values[i], xmin=x_positions[i], xmax=x_positions[i+1], colors='b', linewidth=2)

# 画竖直线连接各层
for i in range(1, len(y_values)):
    plt.vlines(x=x_positions[i], ymin=y_values[i-1], ymax=y_values[i], colors='gray', linestyle="dashed")

# 设置标签
plt.xlabel("Percentage of Keys/% (Sorted by the Probability)")
plt.ylabel("Probability of Valid Plaintext Pairs("+r'$-log_2\mathcal{P}$'+")")
# plt.title("The Probability distribution ")
plt.xlim(0, 100)
plt.ylim(min(y_values) - 1, max(y_values) + 1)
plt.grid(axis='x', linestyle='--', alpha=0.5)

# 显示图像
plt.show()
